{
  "swagger": "2.0",
  "info": {
    "description": "This is the API for the AI service",
    "title": "AI Service API",
    "contact": {},
    "version": "1.0"
  },
  "paths": {
    "/guess": {
      "post": {
        "description": "Gives a list of words for that specific topic",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["ai"],
        "summary": "Gives a list of words for that specific topic",
        "parameters": [
          {
            "type": "string",
            "description": "Authenticated user JWT token",
            "name": "commz-token",
            "in": "header",
            "required": true
          },
          {
            "description": "the topic for the words to generate",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/handlers.TextManipulationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "generated words",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request body or user ID",
            "schema": {
              "$ref": "#/definitions/utils.ServiceError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/utils.ServiceError"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/utils.ServiceError"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "summary": "Get the service Version",
        "responses": {
          "200": {
            "description": "version",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "handlers.TextManipulationRequest": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "utils.ServiceError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
