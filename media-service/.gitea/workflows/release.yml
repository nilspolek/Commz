name: Release
on:
  push:
    tags:
      - "*"

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and Push Docker image
        run: |
          docker login team6-managing.mni.thm.de:3000 -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --no-cache -t team6-managing.mni.thm.de:3000/commz/media-service:${{ env.RELEASE_VERSION }} . --push
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Get last commits
        id: last-commits
        run: |
          # Get the previous tag (if any)
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{ github.ref }}^ 2>/dev/null || echo "")

          # Get the commit messages since the previous tag
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --oneline --pretty=format:"- %s" ${{ github.ref }})
          else
            COMMITS=$(git log --oneline --pretty=format:"- %s" $PREVIOUS_TAG..${{ github.ref }})
          fi

          # Output the commits for use in the release body
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Use Go Action
        uses: akkuman/gitea-release-action@v1
        with:
          body: |
            ${{ steps.last-commits.outputs.commits }}
            ## Images:
            - **[Docker Image](http://team6-managing.mni.thm.de:3000/Commz/-/packages/container/media-service/${{ env.RELEASE_VERSION }})**
